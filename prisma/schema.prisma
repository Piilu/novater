// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Reservation {
    id              Int                 @id @default(autoincrement())
    firstName       String
    lastName        String
    totalPrice      String
    totalTravelTime Int
    createdAt       DateTime            @default(now())
    tickets         ReservationTicket[]
    ticket          Ticket?             @relation(fields: [ticketId], references: [id], onDelete: Cascade)
    ticketId        String?
}

model ReservationTicket {
    id            Int         @id @default(autoincrement())
    amount        Int
    schedule      Schedule    @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
    reservation   Reservation? @relation(fields: [reservationId], references: [id], onDelete: Cascade)
    reservationId Int?
    scheduleId    String
}

model Ticket {
    id           String        @id @default(uuid())
    expires      DateTime
    companies    Company[]
    schedules    Schedule[]
    routeData    RouteData[]
    routes       Route[]
    reservations Reservation[]
    createdAt    DateTime      @default(now())
}

model Route {
    id       String     @id @default(uuid())
    distance String
    from     RouteData  @relation("from", fields: [fromId], references: [id], onDelete: Cascade)
    to       RouteData  @relation("to", fields: [toId], references: [id], onDelete: Cascade)
    fromId   String
    toId     String
    ticket   Ticket     @relation(fields: [ticketId], references: [id], onDelete: Cascade)
    ticketId String
    schedule Schedule[]
}

model RouteData {
    id       String  @id @default(uuid())
    name     String
    from     Route[] @relation("from")
    to       Route[] @relation("to")
    ticket   Ticket  @relation(fields: [ticketId], references: [id], onDelete: Cascade)
    ticketId String
}

model Schedule {
    id                String              @id @default(uuid())
    travelTime        Int // minutes
    price             Float
    start             DateTime
    end               DateTime
    route             Route               @relation(fields: [routeId], references: [id], onDelete: Cascade)
    company           Company             @relation(fields: [companyId], references: [id], onDelete: Cascade)
    companyId         String
    ticket            Ticket              @relation(fields: [ticketId], references: [id], onDelete: Cascade)
    ticketId          String
    routeId           String
    reservationTicket ReservationTicket[]
}

model Company {
    id        String     @id @default(uuid())
    state     String
    schedules Schedule[]
    ticket    Ticket     @relation(fields: [ticketId], references: [id], onDelete: Cascade)
    ticketId  String
}
